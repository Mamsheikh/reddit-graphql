/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../src/types/Context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CreateUserInput: { // input type
    email: string; // String!
    password: string; // String!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Community: { // root type
    createdAt?: string | null; // String
    creatorId?: string | null; // String
    id?: string | null; // String
    image?: string | null; // String
    name?: string | null; // String
    numberOfMembers?: number | null; // Int
    privacyType?: string | null; // String
  }
  ImageSignature: { // root type
    signature?: string | null; // String
    timestamp?: number | null; // Int
  }
  ImplicitLoginResponse: { // root type
    displayName?: string | null; // String
    email?: string | null; // String
    id?: string | null; // String
    image?: string | null; // String
    loggedIn: boolean; // Boolean!
  }
  Mutation: {};
  Query: {};
  registerResponse: { // root type
    displayName?: string | null; // String
    email?: string | null; // String
    image?: string | null; // String
    message: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Community: { // field return type
    createdAt: string | null; // String
    creatorId: string | null; // String
    id: string | null; // String
    image: string | null; // String
    name: string | null; // String
    numberOfMembers: number | null; // Int
    privacyType: string | null; // String
  }
  ImageSignature: { // field return type
    signature: string | null; // String
    timestamp: number | null; // Int
  }
  ImplicitLoginResponse: { // field return type
    displayName: string | null; // String
    email: string | null; // String
    id: string | null; // String
    image: string | null; // String
    loggedIn: boolean; // Boolean!
  }
  Mutation: { // field return type
    createCommunity: NexusGenRootTypes['Community'] | null; // Community
    createImageSignature: NexusGenRootTypes['ImageSignature'] | null; // ImageSignature
    createUser: NexusGenRootTypes['registerResponse'] | null; // registerResponse
    googleLogin: NexusGenRootTypes['registerResponse'] | null; // registerResponse
    joinCommunity: NexusGenRootTypes['Community'] | null; // Community
    leaveCommunity: NexusGenRootTypes['Community'] | null; // Community
    login: NexusGenRootTypes['registerResponse'] | null; // registerResponse
  }
  Query: { // field return type
    getCommunity: NexusGenRootTypes['Community'] | null; // Community
    getUsersCommunities: Array<NexusGenRootTypes['Community'] | null> | null; // [Community]
    googleAuthUrl: string | null; // String
    implicitLogin: NexusGenRootTypes['ImplicitLoginResponse'] | null; // ImplicitLoginResponse
  }
  registerResponse: { // field return type
    displayName: string | null; // String
    email: string | null; // String
    image: string | null; // String
    message: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Community: { // field return type name
    createdAt: 'String'
    creatorId: 'String'
    id: 'String'
    image: 'String'
    name: 'String'
    numberOfMembers: 'Int'
    privacyType: 'String'
  }
  ImageSignature: { // field return type name
    signature: 'String'
    timestamp: 'Int'
  }
  ImplicitLoginResponse: { // field return type name
    displayName: 'String'
    email: 'String'
    id: 'String'
    image: 'String'
    loggedIn: 'Boolean'
  }
  Mutation: { // field return type name
    createCommunity: 'Community'
    createImageSignature: 'ImageSignature'
    createUser: 'registerResponse'
    googleLogin: 'registerResponse'
    joinCommunity: 'Community'
    leaveCommunity: 'Community'
    login: 'registerResponse'
  }
  Query: { // field return type name
    getCommunity: 'Community'
    getUsersCommunities: 'Community'
    googleAuthUrl: 'String'
    implicitLogin: 'ImplicitLoginResponse'
  }
  registerResponse: { // field return type name
    displayName: 'String'
    email: 'String'
    image: 'String'
    message: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createCommunity: { // args
      communityName: string; // String!
      communityType?: string | null; // String
    }
    createUser: { // args
      credentials: NexusGenInputs['CreateUserInput']; // CreateUserInput!
    }
    googleLogin: { // args
      code: string; // String!
    }
    joinCommunity: { // args
      communityId: string; // String!
    }
    leaveCommunity: { // args
      communityId: string; // String!
    }
    login: { // args
      credentials: NexusGenInputs['CreateUserInput']; // CreateUserInput!
    }
  }
  Query: {
    getCommunity: { // args
      communityName: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}